export struct SongInfo {
    id:int,
    song_name:string,
    singer:string,
    duration:string,
    song_path:string,
}

export component TitleBar inherits Window {
    height: 30px;
    VerticalLayout {
        HorizontalLayout {
            alignment: space-between;
            Rectangle {
                width: 33%;
                Text {
                    x: parent.width * 0.4;
                    text: "歌曲";
                    color: dimgray;
                }
            }

            Rectangle {
                width: 33%;
                Text {
                    x: parent.width * 0.4;
                    text: "歌手";
                    color: dimgray;
                }
            }

            Rectangle {
                width: 33%;
                Text {
                    x: parent.width * 0.4;
                    text: "时间";
                    color: dimgray;
                }
            }
        }

        Path {
            width: 100%;
            height: 5px;
            MoveTo {
                x: 0;
                y: 0;
            }

            LineTo {
                x: 100%;
                y: 0;
            }

            stroke: white;
            stroke-width: 0.3px;
        }
    }
}

export component SongItem inherits Window {
    height: 30px;
    in property <SongInfo> info:{ id:0, song_name:"xxx", singer:"xxx", duration:"xxx", song_path:"xxx" };
    callback double_clicked();
    background: area.has-hover ? rgb(40, 40, 40) : transparent;
    VerticalLayout {
        area := TouchArea {
            double-clicked => {
                double_clicked()
            }
            HorizontalLayout {
                alignment: space-between;
                Rectangle {
                    width: 33%;
                    Text {
                        x: parent.width * 0.4;
                        text: info.song-name;
                    }
                }

                Rectangle {
                    width: 33%;
                    Text {
                        x: parent.width * 0.4;
                        text: info.singer;
                    }
                }

                Rectangle {
                    width: 33%;
                    Text {
                        x: parent.width * 0.4;
                        text: info.duration;
                    }
                }
            }
        }

        Path {
            width: 100%;
            height: 1px;
            MoveTo {
                x: 0;
                y: 0;
            }

            LineTo {
                x: 100%;
                y: 0;
            }

            stroke: white;
            stroke-width: 0.15px;
        }
    }
}
